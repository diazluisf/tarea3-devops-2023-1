# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTarea3Creaciondirectoresypeliculas():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_Tarea3Creaciondirectoresypeliculas(self):
    self.driver.get("http://localhost:8001/")
    self.driver.set_window_size(1296, 1400)
    self.driver.find_element(By.ID, ":r1:-tab-1").click()
    self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-1 .w-16").click()
    self.driver.find_element(By.ID, "name").click()
    self.driver.find_element(By.ID, "name").send_keys("Woody Allen")
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-1 > .group > .flex").click()
    self.driver.find_element(By.ID, "name").click()
    self.driver.find_element(By.ID, "name").send_keys("Quentin Tarantino")
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    self.driver.find_element(By.ID, ":r1:-tab-0").click()
    self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-0 .w-16").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-0 .w-16")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("Pulp Fiction")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Un boxeador, dos sicarios, la esposa de un gánster y dos bandidos se entrelaza en una historia de violencia y redención")
    self.driver.find_element(By.ID, "year").send_keys("1994")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Quentin Tarantino']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-0 path").click()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("Manhattan")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Un escritor de comedias divorciado que sale con una colegiala, se enamora de la amante de su mejor amigo")
    self.driver.find_element(By.ID, "year").send_keys("1979")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Woody Allen']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-0 > .group > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-0 > .group > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("Inception")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Un ladrón que roba secretos corporativos utilizando la tecnología de compartir sueños recibe la tarea inversa de implantar una idea en la mente de un director ejecutivo, pero su trágico pasado puede condenar el proyecto y a su equipo al desastre.")
    self.driver.find_element(By.ID, "year").click()
    self.driver.find_element(By.ID, "year").send_keys("2010")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Cristopher Nolan']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#\\3Ar1\\3A-tabpanel-0 > .group > .flex").click()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("Interstellar")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Cuando la Tierra se vuelve inhabitable en el futuro, un granjero y ex-piloto de la NASA llamado Joseph Cooper recibe la misión de pilotar una nave espacial, junto con un equipo de investigadores, para encontrar un nuevo planeta para los seres humanos.")
    self.driver.find_element(By.ID, "year").click()
    self.driver.find_element(By.ID, "year").send_keys("2014")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Cristopher Nolan']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
  
